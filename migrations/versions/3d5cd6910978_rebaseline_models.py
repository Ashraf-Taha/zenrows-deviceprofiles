"""rebaseline models

Revision ID: 3d5cd6910978
Revises: 
Create Date: 2025-09-20 22:48:57.793968

"""
from alembic import op
import sqlalchemy as sa



# revision identifiers, used by Alembic.
revision = '3d5cd6910978'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('api_keys',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('key_hash', sa.LargeBinary(), nullable=False),
    sa.Column('key_prefix', sa.String(length=12), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('revoked_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_keys_key_prefix'), 'api_keys', ['key_prefix'], unique=False)
    op.create_table('device_profiles',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('owner_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('device_type', sa.Enum('desktop', 'mobile', name='device_type'), nullable=False),
    sa.Column('width', sa.Integer(), nullable=False),
    sa.Column('height', sa.Integer(), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('custom_headers', sa.JSON(), nullable=True),
    sa.Column('is_template', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('visibility', sa.Enum('private', 'global_', name='visibility'), server_default=sa.text("'private'"), nullable=False),
    sa.Column('version', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.CheckConstraint("country ~ '^[a-z]{2}$'", name='chk_country'),
    sa.CheckConstraint('width BETWEEN 1 AND 10000 AND height BETWEEN 1 AND 10000', name='chk_window'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_profiles_owner', 'device_profiles', ['owner_id'], unique=False, postgresql_where=sa.text('deleted_at IS NULL'))
    op.create_index('idx_profiles_tmpl', 'device_profiles', ['is_template'], unique=False, postgresql_where=sa.text('deleted_at IS NULL'))
    op.create_index('idx_profiles_type', 'device_profiles', ['device_type'], unique=False, postgresql_where=sa.text('deleted_at IS NULL'))
    op.create_index('uniq_owner_name_not_deleted', 'device_profiles', ['owner_id', sa.literal_column('lower(name)')], unique=True, postgresql_where=sa.text('deleted_at IS NULL'))
    op.create_table('idempotency_keys',
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('owner_id', sa.String(), nullable=False),
    sa.Column('response', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('device_profile_versions',
    sa.Column('profile_id', sa.String(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('snapshot', sa.JSON(), nullable=False),
    sa.Column('changed_by', sa.String(), nullable=False),
    sa.Column('changed_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['device_profiles.id'], ),
    sa.PrimaryKeyConstraint('profile_id', 'version')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('device_profile_versions')
    op.drop_table('idempotency_keys')
    op.drop_index('uniq_owner_name_not_deleted', table_name='device_profiles', postgresql_where=sa.text('deleted_at IS NULL'))
    op.drop_index('idx_profiles_type', table_name='device_profiles', postgresql_where=sa.text('deleted_at IS NULL'))
    op.drop_index('idx_profiles_tmpl', table_name='device_profiles', postgresql_where=sa.text('deleted_at IS NULL'))
    op.drop_index('idx_profiles_owner', table_name='device_profiles', postgresql_where=sa.text('deleted_at IS NULL'))
    op.drop_table('device_profiles')
    op.drop_index(op.f('ix_api_keys_key_prefix'), table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_table('users')
    # ### end Alembic commands ###
